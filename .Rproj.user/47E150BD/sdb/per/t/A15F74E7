{
    "contents" : "library(reshape2)\nlibrary(XML)\nbase <- 'http://www.basketball-reference.com/players/g/georgpa01/gamelog/'\nurls <- paste(base,2011:2014,sep = '')\nlibrary(plyr)\nall_advanced_rs <- data.frame()\nall_regular <- data.frame()\n\nfor(u in urls){\ntables <- readHTMLTable(u,trim=T,as.data.frame=T)\nregular <- data.frame(tables['pgl_basic'])\nregular$player_gamelog_url <- u\nregular$season_type <- 'RS'\nall_regular <- rbind.fill(all_regular,regular)\nadvanced <- data.frame(tables['pgl_advanced'])\nadvanced$player_gamelog_url <- u\nadvanced$season_type <- 'RS'\nall_advanced_rs <- rbind.fill(all_advanced_rs,advanced)\nrm(advanced)\nrm(regular)\nrm(tables)\n}\n\nall_regular$id <- all_regular$player_gamelog_url\nall_regular$id <- gsub('http://www.basketball-reference.com/players/g','',all_regular$id)\nall_regular$id <-gsub('/gamelog','',all_regular$id)\nall_regular <- cbind(all_regular,colsplit(all_regular$id,'\\\\/',c('a','player_id','season')))\nall_regular$a <- NULL\nnames(all_regular) <- tolower(gsub('pgl_basic.','',names(all_regular)))\nall_regular$id <- NULL\nall_regular <- all_regular[!all_regular$rk %in% 'Rk',]\nnames(all_regular)[5] <- 'team_code' \nall_regular <- data.frame(all_regular)\nnames(all_regular)[c(6,30)] <- c('location','home_away')\nall_regular$date <- as.Date(all_regular$date,'%Y-%m-%d')\nnames(all_regular)\nall_regular[,c(20:28)] <- apply(all_regular[,c(20:28)],2,as.numeric)\n\ndata <- all_regular\n\ndata$year<- as.numeric(as.POSIXlt(data$date)$year+1900)\ndata$year <- data$season\n# the month too \ndata$month <- as.numeric(as.POSIXlt(data$date)$mon+1)\n# but turn months into ordered facors to control the appearance/ordering in the presentation\ndata$monthf <- factor(data$month,levels=as.character(1:12),labels=c(\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"),ordered=F)\n# the day of week is again easily found\ndata$monthf <- factor(data$monthf,levels=c('Oct','Nov','Dec','Jan','Feb','Mar','Apr'))\ndata$weekday = as.POSIXlt(data$date)$wday\n# again turn into factors to control appearance/abbreviation and ordering\n# I use the reverse function rev here to order the week top down in the graph\n# you can cut it out to reverse week order\ndata[data$weekday == 0,'weekday'] <- 7\ndata$weekdayf<- factor(data$weekday,levels=rev(1:7),labels=rev(c(\"Mon\",\"Tue\",\"Wed\",\"Thu\",\"Fri\",\"Sat\",\"Sun\")),ordered=TRUE)\n# the monthweek part is a bit trickier \n# first a factor which cuts the dataa into month chunks\ndata$yearmonth<-as.yearmon(data$date)\ndata$yearmonthf<-factor(data$yearmonth)\n# then find the \"week of year\" for each day\ndata$week <- as.numeric(format(data$date,\"%W\"))\n# and now for each monthblock we normalize the week to start at 1 \ndata<-ddply(data,.(yearmonthf),transform,monthweek=1+week-min(week))\ndata[data$monthweek == 6,'monthweek'] <- 5\ndata[data$month == 10,'monthweek'] <- 4\ndata[data$month == 10&data$year == 2011,'monthweek'] <- 5\ndata[data$month == 10&data$year == 2012,'monthweek'] <- 5\nnames(data)\nP <- ggplot(data, aes(monthweek, weekdayf, fill = pts)) + \n\tgeom_tile(colour = \"white\") + facet_grid(year~monthf) +\n\topts(title = \"The Rise of Paul George\") +  xlab(\"Week of Month\") + ylab(\"\")\nP\nP <- \n\tP + scale_fill_gradientn(\"Points\",colours = c(\"grey\",\"red\",\"blue\",'black'), \n\tvalues = rescale(c(0,13,43)),\n\tguide = \"colorbar\", limits=c(0,43))\nP <- P + theme(\n\tplot.title = element_text(\n\t\tsize = 20,\n\t\tface = \"bold\", \n\t\tvjust = 1.5),\n\tlegend.title = element_text(\n\t\tsize=rel(1), \n\t\tface=\"bold\"))\nP\n\nall_advanced_rs$id <- all_advanced_rs$player_gamelog_url\nall_advanced_rs$id <- gsub('http://www.basketball-reference.com/players/g','',all_advanced_rs$id)\nall_advanced_rs$id <-gsub('/gamelog','',all_advanced_rs$id)\nall_advanced_rs <- cbind(all_advanced_rs,colsplit(all_advanced_rs$id,'\\\\/',c('a','player_id','season')))\nall_advanced_rs$a <- NULL\nnames(all_advanced_rs) <- tolower(gsub('pgl_advanced.','',names(all_advanced_rs)))\nall_advanced_rs$id <- NULL\nall_advanced_rs <- all_advanced_rs[!all_advanced_rs$rk %in% 'Rk',]\nnames(all_advanced_rs)[5] <- 'team_code' \nnames(all_advanced_rs)[6] <- 'location' \nall_advanced_rs <- data.frame(all_advanced_rs)\n\nall_advanced_rs$date <- as.Date(all_advanced_rs$date,'%Y-%m-%d')\nnames(all_advanced_rs)\nall_advanced_rs[,c(20:22)] <- apply(all_advanced_rs[,c(20:22)],2,as.numeric)\nall_advanced_rs$net_rtg <- all_advanced_rs$ortg - all_advanced_rs$drtg\nall_advanced_rs$true_shooting <- 100 * (as.numeric(gsub('\\\\.','',all_advanced_rs$ts.))/1000)\nall <- merge(all_regular,all_advanced_rs)\nall <- all[order(all$date,decreasing=F),]\nwrite.csv(all,'paul_george_rs_data.csv')\n",
    "created" : 1387143217493.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1562227578",
    "id" : "A15F74E7",
    "lastKnownWriteTime" : 1387209798,
    "path" : "~/Desktop/Github/flowingdata_tutorials/calendar_heatmap/paul_george/paul_george.R",
    "project_path" : "calendar_heatmap/paul_george/paul_george.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}